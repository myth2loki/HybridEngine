import java.text.SimpleDateFormat

android {
    signingConfigs {
        release {
            keyAlias SIGN_KEY_ALIAS
            keyPassword SIGN_ALIAS_PWD
            storeFile file(project.SIGN_STORE_PATH)
            storePassword project.SIGN_STORE_PWD
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "APP_LOADER", "false"
            buildConfigField "boolean", "COPY_RESOURCE", "false"
            minifyEnabled false
            //打包自动删除那些不使用的资源
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release
//            applicationVariants.all { variant ->
//                for (flavor in variant.productFlavors) {
//                    genAPKName1(variant, flavor)
//                }
//            }
            manifestPlaceholders = [APP_NAME : project.APP_NAME, rd_statistics_url : "http://test-dev.369cloud.com/interface"]//release
        }
        debug {
            buildConfigField "boolean", "APP_LOADER", "false"
            buildConfigField "boolean", "COPY_RESOURCE", "true"
            minifyEnabled false
            //打包自动删除那些不使用的资源
            shrinkResources true
            zipAlignEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [rd_statistics_url : "http://test-dev.369cloud.com/interface"]//test
        }
    }
}

def genAPKName1(variant, config) {
//    println "aa--> " + config.name
    if (variant.buildType.isDebuggable() || variant.buildType.name == android.buildTypes.appLoader.name) {
        return
    }
    def sdf = new SimpleDateFormat("yyyyMMddHHmmss")
    def curTime = "_" + sdf.format(new Date());
    variant.outputs.each { output ->
        def pName = config.name
        if (output.zipAlign) {
            def file = output.outputFile
            def fileName = project.APP_NAME + "_" + project.VERSION_NAME + curTime + "_" + pName + ".apk"
            output.outputFile = new File(file.parent, fileName)
        } else {
            def file = output.packageApplication.outputFile
            def fileName = project.APP_NAME + "_" + project.VERSION_NAME + curTime + "_" + pName + ".apk"
            output.packageApplication.outputFile = new File(file.parent, fileName)
        }
    }
}
